#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt { tapping-term-ms = <800>; };
/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ---------------------------------------------------------------------------------
// |   `  |  1  |  2  |  3  |  4  |  5  |     |  6  |  7  |  8  |  9  |  0  | BKSP |
// |  TAB |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  |  \   |
// | ESC  |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  ;  |  ENT |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  | APOS |
// | LOW | CTRL | GUI | ALT | GUI | SPC |     | SPC | LOW |LARW |DARW |UARW | RARW |
                        bindings = <
   &kp GRAVE  &kp N1    &kp N2    &kp N3     &kp N4     &kp N5                               &kp N6     &kp N7  &kp N8     &kp N9    &kp N0    &kp BSPC
   &kp TAB    &kp Q     &kp W     &kp F      &kp P      &kp B                                &kp J      &kp L   &kp U      &kp Y     &kp SEMI  &kp BSLH
   &kp CAPS   &kp A     &kp R     &kp S      &kp T      &kp G                                &kp M      &kp N   &kp E      &kp I     &kp O  &kp SQT
   &kp LSHFT  &kp Z     &kp X     &kp C      &kp D      &kp V                                &kp K      &kp H   &kp COMMA  &kp DOT   &kp FSLH  &kp RIGHT_ALT
   &mo LCTRL  &kp K_COPY  &kp K_UNDO &kp LGUI  &mo 3 &kp SPACE                               &lt 2 ENTER &lt 1 BSPC  &kp ESC   &kp K_REDO  &kp K_PASTE  &kp RCTRL
                        >;
        };

        Num {
            display-name = "NUM";
            bindings = <
&trans  &trans     &trans  &trans   &trans  &trans       &trans  &trans  &trans  &trans  &trans   &trans
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans  &trans  &trans  &kp SQT  &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &trans  &trans  &trans  &trans   &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans     &trans  &kp DOT  &kp N0  &kp MINUS    &trans  &trans  &trans  &trans  &trans   &trans
            >;
        };

        Sym {
            display-name = "SYM";
            bindings = <
&trans  &trans         &trans        &trans         &trans         &trans           &trans     &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(LBRC)   &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RBRC)     &trans     &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(COLON)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PLUS)     &kp EQUAL  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(PIPE)     &trans     &trans  &trans  &trans  &trans  &trans
&trans  &trans         &trans        &kp LS(LPAR)   &kp LS(RPAR)   &kp LS(UNDER)    &trans     &trans  &trans  &trans  &trans  &trans
            >;
        };

        Fun {
            display-name = "FUN";
            bindings = <
&trans      &trans        &trans                &trans        &trans        &trans          &trans  &trans          &trans          &trans  &trans     &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans          &trans          &trans  &trans     &trans
&trans      &trans        &kp LG(LS(NUMBER_4))  &trans        &trans        &trans          &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP  &kp RIGHT  &trans
&trans      &trans        &trans                &trans        &trans        &trans          &trans  &trans          &trans          &trans  &trans     &trans
&trans      &trans        &trans                &trans        &trans        &trans          &trans  &trans          &trans          &trans  &trans     &trans
            >;
        };
    };    
};
